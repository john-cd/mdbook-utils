## Build, test the mdbook-utils code; build, test its user guide, and optionally publish to crates.io and deploy the user guide to Pages
##
## Workflow syntax: https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions

name: Build, test, optionally deploy to Pages & publish

# run-name: ${{ github.ref_name }}, triggered by ${{ github.event_name }}; publish: ${{ inputs.publish }}, deploy to github: ${{ inputs.deploy_to_gh_pages }}

on:
  ## Runs on pushes targeting the default branch
  #push:
  #  branches: ["main"]

  ## Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      publish:
        description: 'If true, publish the code to crates.io'
        type: boolean
        required: true
        default: false
      deploy_to_gh_pages:
        description: 'If true, deploy the user guide to GitHub Pages'
        type: boolean
        required: true
        default: false

## Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

## Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
## However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

# Default to bash
defaults:
  run:
    shell: bash

jobs:
  # Each job will run inside its own virtual machine runner
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Basic information
        run: echo "The job was automatically triggered by a ${{ github.event_name }} event from @${{ github.actor }}. The OS is ${{ runner.os }}. The current dir is $(pwd)"
      - name: Code checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: '0' # 0 indicates all history for all branches and tags. Allows the use of `git`. See https://github.com/actions/checkout
      - name: Git status and tags
        run: |
          git --version
          git config user.name "GitHub Actions Bot"
          git config user.email "<>"
          git status
          # git tag
          # git describe --tags
      - name: Create output folder
        run: mkdir -p ./user_guide_book/
      - name: Build Docker image
        run: docker compose -f .devcontainer/compose.yaml -f .devcontainer/compose-ci.yaml build
      - name: Build / test the code and the user guide
        run: docker compose -f .devcontainer/compose.yaml -f .devcontainer/compose-ci.yaml run --rm mdbook-utils
        if: ${{ inputs.publish == 'false' }}"
      - name: Build / test the code and the user guide AND PUBLISH to crates.io
        # Pass the crates.io secret as an env. variable, which is then used by `publish.sh`.
        # See <https://docs.docker.com/compose/environment-variables/envvars-precedence/>
        run: docker compose -f .devcontainer/compose.yaml -f .devcontainer/compose-ci.yaml run --rm --env CRATES_TOKEN=${{ secrets.CRATES_TOKEN }} mdbook-utils .devcontainer/publish.sh -y
        if: ${{ inputs.publish == 'true' }}"
      - name: Setup Github Pages
        id: pages
        uses: actions/configure-pages@v4
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./user_guide_book/

  ## GitHub Pages Deployment job
  pages-deploy:
    name: Deploy to GitHub Pages
    if: ${{ inputs.deploy_to_gh_pages == 'true' }}"
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: github_deployment
        uses: actions/deploy-pages@v4
